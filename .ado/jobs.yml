parameters:
- name: isPublish
  type: boolean
  default : false

# Matrix with target platforms.
- name: BuildMatrix
  type: object
  default:
    - Name: uwp_x64
      TargetCPU: x64
      BuildAppPlatform: uwp
    - Name: uwp_x86
      TargetCPU: x86
      BuildAppPlatform: uwp
    - Name: uwp_arm64
      TargetCPU: arm64
      BuildAppPlatform: uwp
    - Name: win32_x64
      TargetCPU: x64
      BuildAppPlatform: win32
    - Name: win32_x86
      TargetCPU: x86
      BuildAppPlatform: win32
    - Name: win32_arm64
      TargetCPU: arm64
      BuildAppPlatform: win32
    - Name: win32_arm64ec
      TargetCPU: arm64ec
      BuildAppPlatform: win32

jobs:
  # Build libNode binaries per platform.
  - ${{ each MatrixEntry in parameters.BuildMatrix }}:
    - job: Build_Hermes_${{ MatrixEntry.Name }}
      displayName: Build Hermes ${{ MatrixEntry.Name }}
      dependsOn:
        - ${{ if parameters.isPublish }}:
          - Setup
      timeoutInMinutes: 120

      variables:
        semanticVersion: $[ dependencies.Setup.outputs['setVersions.semanticVersion'] ]
        fileVersion: $[ dependencies.Setup.outputs['setVersions.fileVersion'] ]
        # To fake building hermes for faster debugging
        fakeBuild: true

      ${{ if parameters.isPublish }}:
        templateContext:
          outputs:
            - output: pipelineArtifact
              artifactName: ${{ MatrixEntry.Name }}
              targetPath: $(Build.StagingDirectory)\build

      steps:
        - task: PowerShell@2
          displayName: Run the build script for publish
          inputs:
            targetType: filePath
            filePath: $(Build.SourcesDirectory)\.ado\scripts\cibuild.ps1
            arguments:
              -SourcesPath:$(Build.SourcesDirectory)
              -OutputPath:$(Build.StagingDirectory)\build
              -Platform:${{ MatrixEntry.TargetCPU }}
              -Configuration:release
              -AppPlatform:${{ MatrixEntry.BuildAppPlatform }}
              -ReleaseVersion:"$(semanticVersion)"
              -FileVersion:"$(fileVersion)"
              -SkipPrepareNuget
              -FakeBuild:$$(fakeBuild)

        - ${{ if ne(variables.FakeBuild, true) }}:
          - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@5
            displayName: CodeSign Binaries
            condition: not(eq(variables['Build.Reason'], 'PullRequest'))
            inputs:
              connectedServiceName: 'ESRP-JSHost3'
              appRegistrationClientId: '0a35e01f-eadf-420a-a2bf-def002ba898d'
              appRegistrationTenantId: 'cdc5aeea-15c5-4db6-b079-fcadd2505dc2'
              authAKVName: 'OGX-JSHost-KV'
              authCertName: 'OGX-JSHost-Auth4'
              authSignCertName: 'OGX-JSHost-Sign3'
              folderPath: $(Build.StagingDirectory)\build
              # Recursively finds files matching these patterns:
              pattern: |
                **/hermes.dll
                **/hermes.exe
                **/hermesc.exe
              useMinimatch: true
              signConfigType: inlineSignParams
              inlineOperation: |
                [
                  {
                    "KeyCode" : "CP-230012",
                    "OperationCode" : "SigntoolSign",
                    "Parameters" : {
                      "OpusName" : "Microsoft",
                      "OpusInfo" : "http://www.microsoft.com",
                      "FileDigest" : "/fd \"SHA256\"",
                      "PageHash" : "/NPH",
                      "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                    },
                    "ToolName" : "sign",
                    "ToolVersion" : "1.0"
                  },
                  {
                    "KeyCode" : "CP-230012",
                    "OperationCode" : "SigntoolVerify",
                    "Parameters" : {},
                    "ToolName" : "sign",
                    "ToolVersion" : "1.0"
                  }
                ]

        - script: echo TODO - Add Tests here
          displayName: '[Test] - To be Added via bug #77'

        # Make symbols available through http://symweb.
        - ${{ if ne(variables.FakeBuild, true) }}:
          - task: PublishSymbols@2
            displayName: Publish symbols
            condition: not(eq(variables['Build.Reason'], 'PullRequest'))
            inputs:
              SearchPattern: $(Build.StagingDirectory)/build/**/*.pdb
              SymbolServerType: TeamServices
              UseNetCoreClientTool: true

        - script: |
            ls -R $(Build.StagingDirectory)\build
          displayName: Show all files in the Build.StagingDirectory\build
